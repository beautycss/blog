<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Reno&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hanhan.pro/"/>
  <updated>2018-03-03T05:21:23.582Z</updated>
  <id>http://hanhan.pro/</id>
  
  <author>
    <name>Reno</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux下安装n来管理多版本NodeJS</title>
    <link href="http://hanhan.pro/2018/02/22/install-n-to-manage-nodejs-in-linux/"/>
    <id>http://hanhan.pro/2018/02/22/install-n-to-manage-nodejs-in-linux/</id>
    <published>2018-02-21T16:00:00.000Z</published>
    <updated>2018-03-03T05:21:23.582Z</updated>
    
    <content type="html"><![CDATA[<p>在linux环境下已经安装了nodejs的情况下，需要升级或使用其它版本的nodejs，这时需要使用工具n来管理。</p><h3 id="安装步骤："><a href="#安装步骤：" class="headerlink" title="安装步骤："></a>安装步骤：</h3><h4 id="1-已经安装了nodejs环境"><a href="#1-已经安装了nodejs环境" class="headerlink" title="1. 已经安装了nodejs环境;"></a>1. 已经安装了nodejs环境;</h4><h4 id="2-全局安装n；"><a href="#2-全局安装n；" class="headerlink" title="2. 全局安装n；"></a>2. 全局安装n；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g n</div></pre></td></tr></table></figure><a id="more"></a><h4 id="3-输入命令n来查看是否安装成功，成功的话会出来命令提示列表；"><a href="#3-输入命令n来查看是否安装成功，成功的话会出来命令提示列表；" class="headerlink" title="3. 输入命令n来查看是否安装成功，成功的话会出来命令提示列表；"></a>3. 输入命令n来查看是否安装成功，成功的话会出来命令提示列表；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">n</div></pre></td></tr></table></figure><h4 id="4-安装新版的nodejs，这里以安装9-2-0版本为例；"><a href="#4-安装新版的nodejs，这里以安装9-2-0版本为例；" class="headerlink" title="4. 安装新版的nodejs，这里以安装9.2.0版本为例；"></a>4. 安装新版的nodejs，这里以安装9.2.0版本为例；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">n 9.2.0</div></pre></td></tr></table></figure><h4 id="5-查看新安装的node版本和npm版本；"><a href="#5-查看新安装的node版本和npm版本；" class="headerlink" title="5. 查看新安装的node版本和npm版本；"></a>5. 查看新安装的node版本和npm版本；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">node -v</div><div class="line">npm -v</div></pre></td></tr></table></figure><h4 id="6-如果显示的版本为新的版本，说明安装成功。"><a href="#6-如果显示的版本为新的版本，说明安装成功。" class="headerlink" title="6. 如果显示的版本为新的版本，说明安装成功。"></a>6. 如果显示的版本为新的版本，说明安装成功。</h4><h3 id="错误1及解决步骤："><a href="#错误1及解决步骤：" class="headerlink" title="错误1及解决步骤："></a>错误1及解决步骤：</h3><p>如果执行 <code>node -v</code> 显示的版本仍为旧版，说明node安装目录和n的默认路径不一致，需要把n的路径设置为当前node的目录；</p><h4 id="1-先获取当前的node安装目录。"><a href="#1-先获取当前的node安装目录。" class="headerlink" title="1. 先获取当前的node安装目录。"></a>1. 先获取当前的node安装目录。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">which node</div></pre></td></tr></table></figure><p>比如获取到的是 <code>/usr/local/node</code>。如果获取到的路径是 <code>/usr/local/bin/node</code>，说明之前安装的node使用了软链，需要找到当前node的安装目录，例如<code>/usr/local/node</code>。</p><h4 id="2-打开环境配置文件；"><a href="#2-打开环境配置文件；" class="headerlink" title="2. 打开环境配置文件；"></a>2. 打开环境配置文件；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim ~/.bash_profile</div></pre></td></tr></table></figure><h4 id="3-修改环境配置文件并保存；"><a href="#3-修改环境配置文件并保存；" class="headerlink" title="3. 修改环境配置文件并保存；"></a>3. 修改环境配置文件并保存；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">export N_PREFIX=/usr/local/node #当前node的安装目录</div><div class="line">export PATH=$N_PREFIX/bin:$PATH</div></pre></td></tr></table></figure><h4 id="4-执行source使修改生效；"><a href="#4-执行source使修改生效；" class="headerlink" title="4. 执行source使修改生效；"></a>4. 执行source使修改生效；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source ~/.bash_profile</div></pre></td></tr></table></figure><h3 id="错误2及解决步骤："><a href="#错误2及解决步骤：" class="headerlink" title="错误2及解决步骤："></a>错误2及解决步骤：</h3><p>如果出现 <code>n: command not found</code> 的错误，说明除了要解决路径不一致的问题，还要建立一个软链。</p><h4 id="1-执行上面修改路径的4步。"><a href="#1-执行上面修改路径的4步。" class="headerlink" title="1. 执行上面修改路径的4步。"></a>1. 执行上面修改路径的4步。</h4><h4 id="2-找到n的安装目录，建立软链；"><a href="#2-找到n的安装目录，建立软链；" class="headerlink" title="2. 找到n的安装目录，建立软链；"></a>2. 找到n的安装目录，建立软链；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ln -s /usr/local/node/lib/node_modules/n/bin/n /usr/local/bin/n</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在linux环境下已经安装了nodejs的情况下，需要升级或使用其它版本的nodejs，这时需要使用工具n来管理。&lt;/p&gt;
&lt;h3 id=&quot;安装步骤：&quot;&gt;&lt;a href=&quot;#安装步骤：&quot; class=&quot;headerlink&quot; title=&quot;安装步骤：&quot;&gt;&lt;/a&gt;安装步骤：&lt;/h3&gt;&lt;h4 id=&quot;1-已经安装了nodejs环境&quot;&gt;&lt;a href=&quot;#1-已经安装了nodejs环境&quot; class=&quot;headerlink&quot; title=&quot;1. 已经安装了nodejs环境;&quot;&gt;&lt;/a&gt;1. 已经安装了nodejs环境;&lt;/h4&gt;&lt;h4 id=&quot;2-全局安装n；&quot;&gt;&lt;a href=&quot;#2-全局安装n；&quot; class=&quot;headerlink&quot; title=&quot;2. 全局安装n；&quot;&gt;&lt;/a&gt;2. 全局安装n；&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install -g n&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="nodejs" scheme="http://hanhan.pro/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>Linux下安装NodeJS</title>
    <link href="http://hanhan.pro/2017/11/01/install-nodejs-in-linux/"/>
    <id>http://hanhan.pro/2017/11/01/install-nodejs-in-linux/</id>
    <published>2017-10-31T16:00:00.000Z</published>
    <updated>2018-03-03T03:36:49.699Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-推荐在-淘宝镜像-下载-node-v8-9-0-linux-x64-tar-gz-，并上传到服务器的-usr-local-目录下"><a href="#1-推荐在-淘宝镜像-下载-node-v8-9-0-linux-x64-tar-gz-，并上传到服务器的-usr-local-目录下" class="headerlink" title="1. 推荐在 淘宝镜像 下载 node-v8.9.0-linux-x64.tar.gz ，并上传到服务器的 /usr/local 目录下;"></a>1. 推荐在 <a href="http://npm.taobao.org" target="_blank" rel="external">淘宝镜像</a> 下载 <a href="http://npm.taobao.org/mirrors/node/latest-v8.x/node-v8.9.0-linux-x64.tar.gz" target="_blank" rel="external"><code>node-v8.9.0-linux-x64.tar.gz</code></a> ，并上传到服务器的 <code>/usr/local</code> 目录下;</h4><p>我这里以<code>8.9.0</code>版本为例，且使用的linux服务器为64位的。</p><h4 id="2-在终端进入到服务器的-usr-local-目录下，运行以下命令解压文件（或ftp工具解压也可以）；"><a href="#2-在终端进入到服务器的-usr-local-目录下，运行以下命令解压文件（或ftp工具解压也可以）；" class="headerlink" title="2. 在终端进入到服务器的 /usr/local 目录下，运行以下命令解压文件（或ftp工具解压也可以）；"></a>2. 在终端进入到服务器的 <code>/usr/local</code> 目录下，运行以下命令解压文件（或ftp工具解压也可以）；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar zxf node-v8.9.0-linux-x64.tar.gz</div></pre></td></tr></table></figure><a id="more"></a><h4 id="3-重命名文件夹，我这里改名为node，也可以使用ftp工具直接重命名；"><a href="#3-重命名文件夹，我这里改名为node，也可以使用ftp工具直接重命名；" class="headerlink" title="3. 重命名文件夹，我这里改名为node，也可以使用ftp工具直接重命名；"></a>3. 重命名文件夹，我这里改名为<code>node</code>，也可以使用ftp工具直接重命名；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mv node-v8.9.0-linux-x64 node</div></pre></td></tr></table></figure><h4 id="4-进入node-bin目录下看看是否有node及npm两个文件，没有的话重新解压看看；"><a href="#4-进入node-bin目录下看看是否有node及npm两个文件，没有的话重新解压看看；" class="headerlink" title="4. 进入node/bin目录下看看是否有node及npm两个文件，没有的话重新解压看看；"></a>4. 进入<code>node/bin</code>目录下看看是否有<code>node</code>及<code>npm</code>两个文件，没有的话重新解压看看；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd node/bin</div></pre></td></tr></table></figure><h4 id="5-建立软链；"><a href="#5-建立软链；" class="headerlink" title="5. 建立软链；"></a>5. 建立软链；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ln -s /usr/local/node/bin/node /usr/local/bin/node</div><div class="line">ln -s /usr/local/node/bin/npm /usr/local/bin/npm</div></pre></td></tr></table></figure><p>这样就可以将nodejs设置为全局访问了。</p><h4 id="6-查看node及npm版本号，有的话则安装成功；"><a href="#6-查看node及npm版本号，有的话则安装成功；" class="headerlink" title="6. 查看node及npm版本号，有的话则安装成功；"></a>6. 查看node及npm版本号，有的话则安装成功；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">node -v</div><div class="line">npm -v</div></pre></td></tr></table></figure><h4 id="7-附上查看linux版本的命令。"><a href="#7-附上查看linux版本的命令。" class="headerlink" title="7. 附上查看linux版本的命令。"></a>7. 附上查看linux版本的命令。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /proc/version</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-推荐在-淘宝镜像-下载-node-v8-9-0-linux-x64-tar-gz-，并上传到服务器的-usr-local-目录下&quot;&gt;&lt;a href=&quot;#1-推荐在-淘宝镜像-下载-node-v8-9-0-linux-x64-tar-gz-，并上传到服务器的-usr-local-目录下&quot; class=&quot;headerlink&quot; title=&quot;1. 推荐在 淘宝镜像 下载 node-v8.9.0-linux-x64.tar.gz ，并上传到服务器的 /usr/local 目录下;&quot;&gt;&lt;/a&gt;1. 推荐在 &lt;a href=&quot;http://npm.taobao.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;淘宝镜像&lt;/a&gt; 下载 &lt;a href=&quot;http://npm.taobao.org/mirrors/node/latest-v8.x/node-v8.9.0-linux-x64.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;node-v8.9.0-linux-x64.tar.gz&lt;/code&gt;&lt;/a&gt; ，并上传到服务器的 &lt;code&gt;/usr/local&lt;/code&gt; 目录下;&lt;/h4&gt;&lt;p&gt;我这里以&lt;code&gt;8.9.0&lt;/code&gt;版本为例，且使用的linux服务器为64位的。&lt;/p&gt;
&lt;h4 id=&quot;2-在终端进入到服务器的-usr-local-目录下，运行以下命令解压文件（或ftp工具解压也可以）；&quot;&gt;&lt;a href=&quot;#2-在终端进入到服务器的-usr-local-目录下，运行以下命令解压文件（或ftp工具解压也可以）；&quot; class=&quot;headerlink&quot; title=&quot;2. 在终端进入到服务器的 /usr/local 目录下，运行以下命令解压文件（或ftp工具解压也可以）；&quot;&gt;&lt;/a&gt;2. 在终端进入到服务器的 &lt;code&gt;/usr/local&lt;/code&gt; 目录下，运行以下命令解压文件（或ftp工具解压也可以）；&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;tar zxf node-v8.9.0-linux-x64.tar.gz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="nodejs" scheme="http://hanhan.pro/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>在Windows下使用NVM安装NodeJS</title>
    <link href="http://hanhan.pro/2017/10/30/using-nvm-install-nodejs-in-windows/"/>
    <id>http://hanhan.pro/2017/10/30/using-nvm-install-nodejs-in-windows/</id>
    <published>2017-10-29T16:00:00.000Z</published>
    <updated>2018-02-10T02:50:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>如果要在同一台电脑上安装不同版本的nodejs来使用，需要用到nvm。</p><h4 id="1-下载nvm安装包并安装，安装路径可自行设置。"><a href="#1-下载nvm安装包并安装，安装路径可自行设置。" class="headerlink" title="1. 下载nvm安装包并安装，安装路径可自行设置。"></a>1. 下载nvm安装包并安装，安装路径可自行设置。</h4><h4 id="2-打开你的nvm安装目录，安装nvm时设置的安装路径，以下为默认路径。"><a href="#2-打开你的nvm安装目录，安装nvm时设置的安装路径，以下为默认路径。" class="headerlink" title="2. 打开你的nvm安装目录，安装nvm时设置的安装路径，以下为默认路径。"></a>2. 打开你的nvm安装目录，安装nvm时设置的安装路径，以下为默认路径。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:\Users\Administrator\AppData\Roaming\nvm</div></pre></td></tr></table></figure><h4 id="3-运行install-cmd，命令行里会提示安装路径，复制粘贴你的nvm安装路径即可。"><a href="#3-运行install-cmd，命令行里会提示安装路径，复制粘贴你的nvm安装路径即可。" class="headerlink" title="3. 运行install.cmd，命令行里会提示安装路径，复制粘贴你的nvm安装路径即可。"></a>3. 运行<code>install.cmd</code>，命令行里会提示安装路径，复制粘贴你的nvm安装路径即可。</h4><a id="more"></a><h4 id="4-运行完成后，nvm目录下多了一个setting-txt文件，为nvm配置文件。"><a href="#4-运行完成后，nvm目录下多了一个setting-txt文件，为nvm配置文件。" class="headerlink" title="4. 运行完成后，nvm目录下多了一个setting.txt文件，为nvm配置文件。"></a>4. 运行完成后，nvm目录下多了一个<code>setting.txt</code>文件，为nvm配置文件。</h4><h4 id="5-打开文件setting-txt，添加以下代码："><a href="#5-打开文件setting-txt，添加以下代码：" class="headerlink" title="5. 打开文件setting.txt，添加以下代码："></a>5. 打开文件<code>setting.txt</code>，添加以下代码：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">node_mirror: http://npm.taobao.org/mirrors/node/ </div><div class="line">npm_mirror: https://npm.taobao.org/mirrors/npm/</div></pre></td></tr></table></figure><p>以上代码设置了镜像为国内，以便快速成功的安装nodejs。</p><h4 id="6-安装nodejs，如果需指定nodejs位数需要在后面加，我这里根据需要安装的是32位，版本是8-3-0："><a href="#6-安装nodejs，如果需指定nodejs位数需要在后面加，我这里根据需要安装的是32位，版本是8-3-0：" class="headerlink" title="6. 安装nodejs，如果需指定nodejs位数需要在后面加，我这里根据需要安装的是32位，版本是8.3.0："></a>6. 安装nodejs，如果需指定nodejs位数需要在后面加，我这里根据需要安装的是32位，版本是8.3.0：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nvm install 8.3.0 32</div></pre></td></tr></table></figure><p>这里指定了安装32位的nodejs，不指定则默认安装64位的。</p><h4 id="7-安装好nodejs后，会提示用使用use来启动这个版本，输入以下命令来启用："><a href="#7-安装好nodejs后，会提示用使用use来启动这个版本，输入以下命令来启用：" class="headerlink" title="7. 安装好nodejs后，会提示用使用use来启动这个版本，输入以下命令来启用："></a>7. 安装好nodejs后，会提示用使用use来启动这个版本，输入以下命令来启用：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nvm use 8.3.0 32</div></pre></td></tr></table></figure><p>使用use时也要带上安装的位数：32。</p><h4 id="8-可以输入命令来查看使用的nodejs和npm版本，如果显示出来版本号表示该nodejs安装成功："><a href="#8-可以输入命令来查看使用的nodejs和npm版本，如果显示出来版本号表示该nodejs安装成功：" class="headerlink" title="8. 可以输入命令来查看使用的nodejs和npm版本，如果显示出来版本号表示该nodejs安装成功："></a>8. 可以输入命令来查看使用的nodejs和npm版本，如果显示出来版本号表示该nodejs安装成功：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">node -v</div><div class="line">npm -v</div></pre></td></tr></table></figure><h4 id="9-为了便于快速安装npm模块，可以在用户目录建一个-npmrc文件，添加以下代码："><a href="#9-为了便于快速安装npm模块，可以在用户目录建一个-npmrc文件，添加以下代码：" class="headerlink" title="9. 为了便于快速安装npm模块，可以在用户目录建一个.npmrc文件，添加以下代码："></a>9. 为了便于快速安装npm模块，可以在用户目录建一个<code>.npmrc</code>文件，添加以下代码：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure><p>该文件一般是在你的用户目录下，比如<code>C:\Users\YourUsername</code>下面。该配置设置了npm的源为淘宝的源，解决了默认访问官方的国外源慢的问题。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果要在同一台电脑上安装不同版本的nodejs来使用，需要用到nvm。&lt;/p&gt;
&lt;h4 id=&quot;1-下载nvm安装包并安装，安装路径可自行设置。&quot;&gt;&lt;a href=&quot;#1-下载nvm安装包并安装，安装路径可自行设置。&quot; class=&quot;headerlink&quot; title=&quot;1. 下载nvm安装包并安装，安装路径可自行设置。&quot;&gt;&lt;/a&gt;1. 下载nvm安装包并安装，安装路径可自行设置。&lt;/h4&gt;&lt;h4 id=&quot;2-打开你的nvm安装目录，安装nvm时设置的安装路径，以下为默认路径。&quot;&gt;&lt;a href=&quot;#2-打开你的nvm安装目录，安装nvm时设置的安装路径，以下为默认路径。&quot; class=&quot;headerlink&quot; title=&quot;2. 打开你的nvm安装目录，安装nvm时设置的安装路径，以下为默认路径。&quot;&gt;&lt;/a&gt;2. 打开你的nvm安装目录，安装nvm时设置的安装路径，以下为默认路径。&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;C:\Users\Administrator\AppData\Roaming\nvm&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;3-运行install-cmd，命令行里会提示安装路径，复制粘贴你的nvm安装路径即可。&quot;&gt;&lt;a href=&quot;#3-运行install-cmd，命令行里会提示安装路径，复制粘贴你的nvm安装路径即可。&quot; class=&quot;headerlink&quot; title=&quot;3. 运行install.cmd，命令行里会提示安装路径，复制粘贴你的nvm安装路径即可。&quot;&gt;&lt;/a&gt;3. 运行&lt;code&gt;install.cmd&lt;/code&gt;，命令行里会提示安装路径，复制粘贴你的nvm安装路径即可。&lt;/h4&gt;
    
    </summary>
    
    
      <category term="nodejs" scheme="http://hanhan.pro/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>VSCode之Mac OS常用快捷键整理</title>
    <link href="http://hanhan.pro/2017/09/02/vscode-shortcuts-macos/"/>
    <id>http://hanhan.pro/2017/09/02/vscode-shortcuts-macos/</id>
    <published>2017-09-01T16:00:00.000Z</published>
    <updated>2018-02-10T02:50:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>分享一下我整理出来的Mac OS下常用VSCode快捷键，以便大家更快速的进行编码开发。</p><h4 id="代码操作："><a href="#代码操作：" class="headerlink" title="代码操作："></a>代码操作：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">删除光标所在行：CMD+X</div><div class="line">上移光标所在行：Alt+Up</div><div class="line">下移光标所在行：Alt+Down</div><div class="line">向上复制光标所在行：Alt+Shift+Up</div><div class="line">向下复制光标所在行：Alt+Shift+Down</div></pre></td></tr></table></figure><a id="more"></a><h4 id="光标相关："><a href="#光标相关：" class="headerlink" title="光标相关："></a>光标相关：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">移到文件开头：CMD+Up</div><div class="line">移到文件结尾：CMD+Down</div><div class="line">移到本行最左侧：CMD+Left</div><div class="line">移到本行最右侧：CMD+Right</div><div class="line">选中当前行：CMD+I</div><div class="line">连续选中多行：连续按CMD+I</div><div class="line">选中光标处单词：CMD+D</div><div class="line">连续选中多个相同单词：连续按CMD+D</div><div class="line">一次选中多个相同单词：CMD+Shift+L</div></pre></td></tr></table></figure><h4 id="官方快捷键列表："><a href="#官方快捷键列表：" class="headerlink" title="官方快捷键列表："></a>官方快捷键列表：</h4><ul><li>官方提供的快捷键列表，但是是英文的。<br><img src="/assets/images/vscode-shortcuts/keyboard-shortcuts-macos.jpg" alt="官方快捷键列表"></li></ul><ul><li>也可以点击<code>帮助</code>菜单下面的<code>快捷键参考</code>，可以看到全部快捷键列表。<br><img src="/assets/images/vscode-shortcuts/shortcuts-menu.png" alt="快捷键菜单"></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;分享一下我整理出来的Mac OS下常用VSCode快捷键，以便大家更快速的进行编码开发。&lt;/p&gt;
&lt;h4 id=&quot;代码操作：&quot;&gt;&lt;a href=&quot;#代码操作：&quot; class=&quot;headerlink&quot; title=&quot;代码操作：&quot;&gt;&lt;/a&gt;代码操作：&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;删除光标所在行：CMD+X&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;上移光标所在行：Alt+Up&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;下移光标所在行：Alt+Down&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;向上复制光标所在行：Alt+Shift+Up&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;向下复制光标所在行：Alt+Shift+Down&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="前端工具" scheme="http://hanhan.pro/tags/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/"/>
    
      <category term="vscode" scheme="http://hanhan.pro/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>Electron之在Windows下使用原生NodeJS模块</title>
    <link href="http://hanhan.pro/2017/08/05/using-native-node-modules-in-electron-windows/"/>
    <id>http://hanhan.pro/2017/08/05/using-native-node-modules-in-electron-windows/</id>
    <published>2017-08-04T16:00:00.000Z</published>
    <updated>2018-02-10T02:50:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>需要使用 <code>ffi</code> 和 <code>ref</code> 两个模块来读取DLL文件。</p><h4 id="1-修改npm配置文件-npmrc，添加以下代码，以便安装electron；"><a href="#1-修改npm配置文件-npmrc，添加以下代码，以便安装electron；" class="headerlink" title="1. 修改npm配置文件.npmrc，添加以下代码，以便安装electron；"></a>1. 修改npm配置文件<code>.npmrc</code>，添加以下代码，以便安装<code>electron</code>；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">registry=https://registry.npm.taobao.org</div><div class="line">sass_binary_site=https://npm.taobao.org/mirrors/node-sass/</div><div class="line">phantomjs_cdnurl=http://npm.taobao.org/mirrors/phantomjs</div><div class="line">ELECTRON_MIRROR=http://npm.taobao.org/mirrors/electron/</div></pre></td></tr></table></figure><p>该文件一般是在你的用户目录下，比如<code>C:\Users\YourUsername</code>下面。如果没有，就新建这个文件。以上代码设置了npm的源以及electron的镜像，设置electron镜像为国内，才能快速成功的安装electron。<br><a id="more"></a></p><h4 id="2-全局安装electron；"><a href="#2-全局安装electron；" class="headerlink" title="2. 全局安装electron；"></a>2. 全局安装<code>electron</code>；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install electron -g</div></pre></td></tr></table></figure><p>建议全局安装Electron。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --arch=ia32 electron -g</div></pre></td></tr></table></figure><p>如果需要安装32位，则使用<code>--arch=ia32</code>。</p><h4 id="3-全局安装electron-packager，electron打包用；"><a href="#3-全局安装electron-packager，electron打包用；" class="headerlink" title="3. 全局安装electron-packager，electron打包用；"></a>3. 全局安装<code>electron-packager</code>，electron打包用；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install electron-packager -g</div></pre></td></tr></table></figure><h4 id="4-全局安装electron-rebuild，之后编译用；"><a href="#4-全局安装electron-rebuild，之后编译用；" class="headerlink" title="4. 全局安装electron-rebuild，之后编译用；"></a>4. 全局安装<code>electron-rebuild</code>，之后编译用；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --save-dev electron-rebuild -g</div></pre></td></tr></table></figure><p>为了方便我这里是全局安装。</p><h4 id="5-命令行工具进入electron根目录，安装ffi-和-ref-两个模块；"><a href="#5-命令行工具进入electron根目录，安装ffi-和-ref-两个模块；" class="headerlink" title="5. 命令行工具进入electron根目录，安装ffi 和 ref 两个模块；"></a>5. 命令行工具进入electron根目录，安装<code>ffi</code> 和 <code>ref</code> 两个模块；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install ffi</div><div class="line">npm install ref</div></pre></td></tr></table></figure><h4 id="6-在electron根目录下运行electron-rebuild，以编译依赖的模块；"><a href="#6-在electron根目录下运行electron-rebuild，以编译依赖的模块；" class="headerlink" title="6. 在electron根目录下运行electron-rebuild，以编译依赖的模块；"></a>6. 在electron根目录下运行<code>electron-rebuild</code>，以编译依赖的模块；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">electron-rebuild</div></pre></td></tr></table></figure><h4 id="7-electron根目录下的package-json里面打包配置，需要设置为64位的，否则调用NodeJS模块报错；"><a href="#7-electron根目录下的package-json里面打包配置，需要设置为64位的，否则调用NodeJS模块报错；" class="headerlink" title="7. electron根目录下的package.json里面打包配置，需要设置为64位的，否则调用NodeJS模块报错；"></a>7. electron根目录下的<code>package.json</code>里面打包配置，需要设置为64位的，否则调用NodeJS模块报错；</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&quot;build&quot; : &quot;electron-packager ./projectFolder newFolder --overwrite --platform=win32 --arch=x64 --out=dist --icon=projectFolder/icon.ico --electron-version=1.7.5&quot;</div></pre></td></tr></table></figure><h4 id="8-运行打包后，需拷贝根目录的node-modules文件夹到生成的app下的resources目录下；"><a href="#8-运行打包后，需拷贝根目录的node-modules文件夹到生成的app下的resources目录下；" class="headerlink" title="8. 运行打包后，需拷贝根目录的node_modules文件夹到生成的app下的resources目录下；"></a>8. 运行打包后，需拷贝根目录的<code>node_modules</code>文件夹到生成的app下的<code>resources</code>目录下；</h4><h4 id="9-拷贝根目录下的main-js到生成的app下的resources目录下；"><a href="#9-拷贝根目录下的main-js到生成的app下的resources目录下；" class="headerlink" title="9. 拷贝根目录下的main.js到生成的app下的resources目录下；"></a>9. 拷贝根目录下的<code>main.js</code>到生成的app下的<code>resources</code>目录下；</h4><h4 id="10-运行生成好的app，正常调用表示成功。"><a href="#10-运行生成好的app，正常调用表示成功。" class="headerlink" title="10. 运行生成好的app，正常调用表示成功。"></a>10. 运行生成好的app，正常调用表示成功。</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;需要使用 &lt;code&gt;ffi&lt;/code&gt; 和 &lt;code&gt;ref&lt;/code&gt; 两个模块来读取DLL文件。&lt;/p&gt;
&lt;h4 id=&quot;1-修改npm配置文件-npmrc，添加以下代码，以便安装electron；&quot;&gt;&lt;a href=&quot;#1-修改npm配置文件-npmrc，添加以下代码，以便安装electron；&quot; class=&quot;headerlink&quot; title=&quot;1. 修改npm配置文件.npmrc，添加以下代码，以便安装electron；&quot;&gt;&lt;/a&gt;1. 修改npm配置文件&lt;code&gt;.npmrc&lt;/code&gt;，添加以下代码，以便安装&lt;code&gt;electron&lt;/code&gt;；&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;registry=https://registry.npm.taobao.org&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sass_binary_site=https://npm.taobao.org/mirrors/node-sass/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;phantomjs_cdnurl=http://npm.taobao.org/mirrors/phantomjs&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ELECTRON_MIRROR=http://npm.taobao.org/mirrors/electron/&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该文件一般是在你的用户目录下，比如&lt;code&gt;C:\Users\YourUsername&lt;/code&gt;下面。如果没有，就新建这个文件。以上代码设置了npm的源以及electron的镜像，设置electron镜像为国内，才能快速成功的安装electron。&lt;br&gt;
    
    </summary>
    
    
      <category term="electron" scheme="http://hanhan.pro/tags/electron/"/>
    
  </entry>
  
  <entry>
    <title>react native之IOS端打包</title>
    <link href="http://hanhan.pro/2017/05/02/react-native-ios-bundle/"/>
    <id>http://hanhan.pro/2017/05/02/react-native-ios-bundle/</id>
    <published>2017-05-01T16:00:00.000Z</published>
    <updated>2018-02-10T02:50:32.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-进入你的react-native工程目录："><a href="#1-进入你的react-native工程目录：" class="headerlink" title="1. 进入你的react native工程目录："></a>1. 进入你的react native工程目录：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /Users/xiaoming/rnApp</div></pre></td></tr></table></figure><h4 id="2-运行以下代码生成bundle文件，生成的目录和名字可以自定义，以下代码生成文件到-ios目录下，名字叫-rnApp-bundle："><a href="#2-运行以下代码生成bundle文件，生成的目录和名字可以自定义，以下代码生成文件到-ios目录下，名字叫-rnApp-bundle：" class="headerlink" title="2. 运行以下代码生成bundle文件，生成的目录和名字可以自定义，以下代码生成文件到 ios目录下，名字叫 rnApp.bundle："></a>2. 运行以下代码生成bundle文件，生成的目录和名字可以自定义，以下代码生成文件到 <code>ios</code>目录下，名字叫 <code>rnApp.bundle</code>：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">react-native bundle --entry-file index.ios.js --platform ios --bundle-output ios/rnApp.bundle</div></pre></td></tr></table></figure><a id="more"></a><h4 id="3-在Xcode里左侧的项目文件夹，右键-Add-Files-to-，将刚才生成的两个文件添加到工程里。"><a href="#3-在Xcode里左侧的项目文件夹，右键-Add-Files-to-，将刚才生成的两个文件添加到工程里。" class="headerlink" title="3. 在Xcode里左侧的项目文件夹，右键 Add Files to... ，将刚才生成的两个文件添加到工程里。"></a>3. 在Xcode里左侧的项目文件夹，右键 <code>Add Files to...</code> ，将刚才生成的两个文件添加到工程里。</h4><h4 id="4-在Xcode里打开-AppDelegate-m-文件，找到代码-jsCodeLocation-RCTBundleURLProvider-sharedSettings-，在其下方添加以下代码-："><a href="#4-在Xcode里打开-AppDelegate-m-文件，找到代码-jsCodeLocation-RCTBundleURLProvider-sharedSettings-，在其下方添加以下代码-：" class="headerlink" title="4. 在Xcode里打开 AppDelegate.m 文件，找到代码 jsCodeLocation = [[RCTBundleURLProvider sharedSettings]，在其下方添加以下代码 ："></a>4. 在Xcode里打开 <code>AppDelegate.m</code> 文件，找到代码 <code>jsCodeLocation = [[RCTBundleURLProvider sharedSettings]</code>，在其下方添加以下代码 ：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jsCodeLocation = [[NSBundle mainBundle] URLForResource:@&quot;rnApp&quot; withExtension:@&quot;bundle&quot;];</div></pre></td></tr></table></figure><p>注意：代码里的 <code>@&quot;rnApp&quot;</code> 和 <code>@&quot;bundle&quot;</code>，与之前生成的文件 <code>rnApp.bundle</code> 对应。</p><h4 id="5-在Xcode里点击运行，使用模拟器测试app能否正常运行。"><a href="#5-在Xcode里点击运行，使用模拟器测试app能否正常运行。" class="headerlink" title="5. 在Xcode里点击运行，使用模拟器测试app能否正常运行。"></a>5. 在Xcode里点击运行，使用模拟器测试app能否正常运行。</h4>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-进入你的react-native工程目录：&quot;&gt;&lt;a href=&quot;#1-进入你的react-native工程目录：&quot; class=&quot;headerlink&quot; title=&quot;1. 进入你的react native工程目录：&quot;&gt;&lt;/a&gt;1. 进入你的react native工程目录：&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cd /Users/xiaoming/rnApp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;2-运行以下代码生成bundle文件，生成的目录和名字可以自定义，以下代码生成文件到-ios目录下，名字叫-rnApp-bundle：&quot;&gt;&lt;a href=&quot;#2-运行以下代码生成bundle文件，生成的目录和名字可以自定义，以下代码生成文件到-ios目录下，名字叫-rnApp-bundle：&quot; class=&quot;headerlink&quot; title=&quot;2. 运行以下代码生成bundle文件，生成的目录和名字可以自定义，以下代码生成文件到 ios目录下，名字叫 rnApp.bundle：&quot;&gt;&lt;/a&gt;2. 运行以下代码生成bundle文件，生成的目录和名字可以自定义，以下代码生成文件到 &lt;code&gt;ios&lt;/code&gt;目录下，名字叫 &lt;code&gt;rnApp.bundle&lt;/code&gt;：&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;react-native bundle --entry-file index.ios.js --platform ios --bundle-output ios/rnApp.bundle&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="React Native" scheme="http://hanhan.pro/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>react native之IOS端开发笔记</title>
    <link href="http://hanhan.pro/2017/03/06/react-native-ios-development-notes/"/>
    <id>http://hanhan.pro/2017/03/06/react-native-ios-development-notes/</id>
    <published>2017-03-05T16:00:00.000Z</published>
    <updated>2018-02-10T02:50:32.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="建议使用或升级到0-4-0版本。版本升级："><a href="#建议使用或升级到0-4-0版本。版本升级：" class="headerlink" title="建议使用或升级到0.4.0版本。版本升级："></a>建议使用或升级到0.4.0版本。版本升级：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">react-native upgrade</div></pre></td></tr></table></figure><h4 id="0-4-0及以上版本的RN插件安装："><a href="#0-4-0及以上版本的RN插件安装：" class="headerlink" title="0.4.0及以上版本的RN插件安装："></a>0.4.0及以上版本的RN插件安装：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">react-native link</div></pre></td></tr></table></figure><p>此命令给所有已安装的native插件链接原生依赖</p><a id="more"></a><h4 id="允许访问网络："><a href="#允许访问网络：" class="headerlink" title="允许访问网络："></a>允许访问网络：</h4><p>在Xcode中打开IOS工程的<code>Info.plist</code>文件，在 <code>App Transport Security Settings</code> 下添加 <code>Allow Arbitrary Loads</code> 属性，值为 <code>true</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Allow Arbitrary Loads</div><div class="line">true</div></pre></td></tr></table></figure></p><h4 id="允许访问相机："><a href="#允许访问相机：" class="headerlink" title="允许访问相机："></a>允许访问相机：</h4><p>在Xcode中打开IOS工程的<code>Info.plist</code>文件，在最下添加 <code>Privacy - Camera Usage Description</code> 属性，值可以填获取相机权限的提示信息，也可以为空<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Privacy - Camera Usage Description</div></pre></td></tr></table></figure></p><h4 id="允许访问相册库："><a href="#允许访问相册库：" class="headerlink" title="允许访问相册库："></a>允许访问相册库：</h4><p>在Xcode中打开IOS工程的<code>Info.plist</code>文件，在最下添加 <code>Privacy - Photo Library Usage Description</code> 属性，值可以填获取访问相册权限的提示信息，也可以为空<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Privacy - Photo Library Usage Description</div></pre></td></tr></table></figure></p><h4 id="支持的屏幕方向设置："><a href="#支持的屏幕方向设置：" class="headerlink" title="支持的屏幕方向设置："></a>支持的屏幕方向设置：</h4><p>在Xcode里点击 <code>General</code> 标签， 在 <code>Device Orientation</code> 可以选择app支持的屏幕方向。</p><p><img src="/assets/images/react-native-ios/orientation.png" alt="屏幕方向设置"></p><h4 id="启动屏设置："><a href="#启动屏设置：" class="headerlink" title="启动屏设置："></a>启动屏设置：</h4><ol><li>在Xcode里点击 <code>General</code> 标签， 在 <code>Launch Images Source</code> 填入 <code>LaunchImage</code>，下面的 <code>Launch Screen File</code> 留空：</li></ol><p><img src="/assets/images/react-native-ios/launch-setting-1.png" alt="启动屏设置-使用LaunchImage"></p><ol><li>进入Xcode，点击左侧 <code>Images.xcassets</code> ，然后根据右侧提示的尺寸，做好图片后，对应的拖进去就设置好了启动屏图片。</li></ol><p><img src="/assets/images/react-native-ios/launch-setting-2.png" alt="启动屏设置-上传图片"></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;建议使用或升级到0-4-0版本。版本升级：&quot;&gt;&lt;a href=&quot;#建议使用或升级到0-4-0版本。版本升级：&quot; class=&quot;headerlink&quot; title=&quot;建议使用或升级到0.4.0版本。版本升级：&quot;&gt;&lt;/a&gt;建议使用或升级到0.4.0版本。版本升级：&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;react-native upgrade&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;0-4-0及以上版本的RN插件安装：&quot;&gt;&lt;a href=&quot;#0-4-0及以上版本的RN插件安装：&quot; class=&quot;headerlink&quot; title=&quot;0.4.0及以上版本的RN插件安装：&quot;&gt;&lt;/a&gt;0.4.0及以上版本的RN插件安装：&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;react-native link&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此命令给所有已安装的native插件链接原生依赖&lt;/p&gt;
    
    </summary>
    
    
      <category term="React Native" scheme="http://hanhan.pro/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>Centos linux 6.8安装nginx</title>
    <link href="http://hanhan.pro/2017/03/03/install-nginx-in-centos-linux-6.8/"/>
    <id>http://hanhan.pro/2017/03/03/install-nginx-in-centos-linux-6.8/</id>
    <published>2017-03-02T16:00:00.000Z</published>
    <updated>2018-02-10T02:50:32.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-在nginx官网下载-1-10-3-tar-gz-，并上传到服务器的-usr-local-目录下："><a href="#1-在nginx官网下载-1-10-3-tar-gz-，并上传到服务器的-usr-local-目录下：" class="headerlink" title="1. 在nginx官网下载 1.10.3.tar.gz ，并上传到服务器的 /usr/local 目录下："></a>1. 在nginx官网下载 <a href="http://nginx.org/download/nginx-1.10.3.tar.gz" target="_blank" rel="external"><code>1.10.3.tar.gz</code></a> ，并上传到服务器的 <code>/usr/local</code> 目录下：</h4><h4 id="2-在终端进入到服务器的-usr-local-目录下，运行以下命令解压文件（或ftp工具解压也可以）："><a href="#2-在终端进入到服务器的-usr-local-目录下，运行以下命令解压文件（或ftp工具解压也可以）：" class="headerlink" title="2. 在终端进入到服务器的 /usr/local 目录下，运行以下命令解压文件（或ftp工具解压也可以）："></a>2. 在终端进入到服务器的 <code>/usr/local</code> 目录下，运行以下命令解压文件（或ftp工具解压也可以）：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar zxf nginx-1.10.3.tar.gz</div></pre></td></tr></table></figure><a id="more"></a><h4 id="3-安装c-工具和库："><a href="#3-安装c-工具和库：" class="headerlink" title="3. 安装c++工具和库："></a>3. 安装c++工具和库：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install gcc gcc-c++ ncurses-devel perl</div></pre></td></tr></table></figure><h4 id="4-安装PCRE库："><a href="#4-安装PCRE库：" class="headerlink" title="4. 安装PCRE库："></a>4. 安装PCRE库：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install pcre-devel</div></pre></td></tr></table></figure><h4 id="5-安装openssl库："><a href="#5-安装openssl库：" class="headerlink" title="5. 安装openssl库："></a>5. 安装openssl库：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install openssl openssl--devel</div></pre></td></tr></table></figure><h4 id="6-安装zlib库："><a href="#6-安装zlib库：" class="headerlink" title="6. 安装zlib库："></a>6. 安装zlib库：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install -y zlib-devel</div></pre></td></tr></table></figure><h4 id="7-进入解压的目录，并运行以下配置代码："><a href="#7-进入解压的目录，并运行以下配置代码：" class="headerlink" title="7. 进入解压的目录，并运行以下配置代码："></a>7. 进入解压的目录，并运行以下配置代码：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ./nginx-1.10.3</div><div class="line">./configure --prefix=/usr/local/nginx</div></pre></td></tr></table></figure><h4 id="8-编译及安装nginx："><a href="#8-编译及安装nginx：" class="headerlink" title="8. 编译及安装nginx："></a>8. 编译及安装nginx：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">make</div><div class="line">make instal</div></pre></td></tr></table></figure><h4 id="9-启动nginx命令："><a href="#9-启动nginx命令：" class="headerlink" title="9. 启动nginx命令："></a>9. 启动nginx命令：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/local/nginx/sbin/nginx</div></pre></td></tr></table></figure><h4 id="10-重启nginx命令："><a href="#10-重启nginx命令：" class="headerlink" title="10. 重启nginx命令："></a>10. 重启nginx命令：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/local/nginx/sbin/nginx -s reload</div></pre></td></tr></table></figure><h4 id="11-建立一个软链："><a href="#11-建立一个软链：" class="headerlink" title="11. 建立一个软链："></a>11. 建立一个软链：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ln -s /usr/local/nginx/sbin/nginx /bin/nginx</div></pre></td></tr></table></figure><p>之后就可以运行 <code>nginx -s reload</code> 来重启nginx了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-在nginx官网下载-1-10-3-tar-gz-，并上传到服务器的-usr-local-目录下：&quot;&gt;&lt;a href=&quot;#1-在nginx官网下载-1-10-3-tar-gz-，并上传到服务器的-usr-local-目录下：&quot; class=&quot;headerlink&quot; title=&quot;1. 在nginx官网下载 1.10.3.tar.gz ，并上传到服务器的 /usr/local 目录下：&quot;&gt;&lt;/a&gt;1. 在nginx官网下载 &lt;a href=&quot;http://nginx.org/download/nginx-1.10.3.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;1.10.3.tar.gz&lt;/code&gt;&lt;/a&gt; ，并上传到服务器的 &lt;code&gt;/usr/local&lt;/code&gt; 目录下：&lt;/h4&gt;&lt;h4 id=&quot;2-在终端进入到服务器的-usr-local-目录下，运行以下命令解压文件（或ftp工具解压也可以）：&quot;&gt;&lt;a href=&quot;#2-在终端进入到服务器的-usr-local-目录下，运行以下命令解压文件（或ftp工具解压也可以）：&quot; class=&quot;headerlink&quot; title=&quot;2. 在终端进入到服务器的 /usr/local 目录下，运行以下命令解压文件（或ftp工具解压也可以）：&quot;&gt;&lt;/a&gt;2. 在终端进入到服务器的 &lt;code&gt;/usr/local&lt;/code&gt; 目录下，运行以下命令解压文件（或ftp工具解压也可以）：&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;tar zxf nginx-1.10.3.tar.gz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="nginx" scheme="http://hanhan.pro/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>mac os使用mkdocs生成文档及解决中文搜索问题</title>
    <link href="http://hanhan.pro/2017/01/23/use-mkdocs-on-mac/"/>
    <id>http://hanhan.pro/2017/01/23/use-mkdocs-on-mac/</id>
    <published>2017-01-23T09:00:00.000Z</published>
    <updated>2018-02-10T02:50:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>mkdocs是一款根据markdown文件生成文档站点的工具，用来生成项目的文档说明非常专业和方便，官网地址是：<a href="http://www.mkdocs.org/" target="_blank" rel="external">http://www.mkdocs.org/</a></p><h2 id="安装及使用mkdocs"><a href="#安装及使用mkdocs" class="headerlink" title="安装及使用mkdocs"></a>安装及使用<code>mkdocs</code></h2><p>使用mkdocs需要安装python和pip，由于mac os自带了<code>python</code>，因此直接从安装pip开始。</p><h4 id="1-安装pip的简单方法："><a href="#1-安装pip的简单方法：" class="headerlink" title="1. 安装pip的简单方法："></a>1. 安装<code>pip</code>的简单方法：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo easy_install pip</div></pre></td></tr></table></figure><a id="more"></a><h4 id="2-安装-mkdocs-工具："><a href="#2-安装-mkdocs-工具：" class="headerlink" title="2. 安装 mkdocs 工具："></a>2. 安装 <code>mkdocs</code> 工具：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo pip install mkdocs</div></pre></td></tr></table></figure><p>说明：建议前面加一个sudo，碰到过报错问题使用此方法解决了</p><h4 id="3-查看mkdocs的版本，以检查是否安装成功："><a href="#3-查看mkdocs的版本，以检查是否安装成功：" class="headerlink" title="3. 查看mkdocs的版本，以检查是否安装成功："></a>3. 查看<code>mkdocs</code>的版本，以检查是否安装成功：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdocs --version</div></pre></td></tr></table></figure><h4 id="4-用mkdocs生成一个工程："><a href="#4-用mkdocs生成一个工程：" class="headerlink" title="4. 用mkdocs生成一个工程："></a>4. 用<code>mkdocs</code>生成一个工程：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdocs new my-project</div><div class="line">cd my-project</div></pre></td></tr></table></figure><h4 id="5-终端里输入mkdocs-serve，运行刚刚创建的工程："><a href="#5-终端里输入mkdocs-serve，运行刚刚创建的工程：" class="headerlink" title="5. 终端里输入mkdocs serve，运行刚刚创建的工程："></a>5. 终端里输入<code>mkdocs serve</code>，运行刚刚创建的工程：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdocs serve</div></pre></td></tr></table></figure><h4 id="6-在浏览器中输入-http-127-0-0-1-8000-访问："><a href="#6-在浏览器中输入-http-127-0-0-1-8000-访问：" class="headerlink" title="6. 在浏览器中输入 http://127.0.0.1:8000/ 访问："></a>6. 在浏览器中输入 <a href="http://127.0.0.1:8000/" target="_blank" rel="external">http://127.0.0.1:8000/</a> 访问：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://127.0.0.1:8000/</div></pre></td></tr></table></figure><h4 id="7-配置mkdocs："><a href="#7-配置mkdocs：" class="headerlink" title="7. 配置mkdocs："></a>7. 配置<code>mkdocs</code>：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">site_name: bootstrap使用文档              # 站点名称及页面标题</div><div class="line">pages:                                  # 页面列表</div><div class="line">    - 首页: index.md                     # 页面标题及左侧显示的名称：对应的md文件</div><div class="line">    - 起步: start.md                     # 页面标题及左侧显示的名称：对应的md文件</div><div class="line">theme: readthedocs                      # 此主题为蓝灰主题，默认为官方亮蓝色主题 </div><div class="line">site_dir: api                           # 生成的文件夹名称，默认为site</div><div class="line"># extra_css: [extra/extra.css]          # 额外的css文件，需要放在docs目录下跟md文件一起</div></pre></td></tr></table></figure><p>官方主题：<br><img src="http://www.mkdocs.org/img/screenshot.png" alt="http://www.mkdocs.org/img/screenshot.png"></p><p>readthedocs主题：<br><img src="http://www.mkdocs.org/img/readthedocs.png" alt="http://www.mkdocs.org/img/readthedocs.png"></p><h4 id="7-终端里输入mkdocs-build，生成文档站点："><a href="#7-终端里输入mkdocs-build，生成文档站点：" class="headerlink" title="7. 终端里输入mkdocs build，生成文档站点："></a>7. 终端里输入<code>mkdocs build</code>，生成文档站点：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdocs build</div></pre></td></tr></table></figure><p>生成完的站点包括完整的css,js,fonts,html等文件/目录。</p><h4 id="8-部署文档站点："><a href="#8-部署文档站点：" class="headerlink" title="8. 部署文档站点："></a>8. 部署文档站点：</h4><p>mkdocs没有提供部署功能，自己可以发布到git站点或自己的空间/主机上去。</p><h2 id="解决中文搜索问题"><a href="#解决中文搜索问题" class="headerlink" title="解决中文搜索问题"></a>解决中文搜索问题</h2><p>由于mkdocs生成json文件时将汉字转成了ascii码字符，且mkdocs使用的搜索插件lunr.js本身不支持中文，因此解决中文搜索问题就是要解决这两个问题。</p><h4 id="1-打开Finder，使用快捷键command-shift-g，输入以下路径，进入mkdocs的目录："><a href="#1-打开Finder，使用快捷键command-shift-g，输入以下路径，进入mkdocs的目录：" class="headerlink" title="1. 打开Finder，使用快捷键command+shift+g，输入以下路径，进入mkdocs的目录："></a>1. 打开Finder，使用快捷键<code>command+shift+g</code>，输入以下路径，进入mkdocs的目录：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/Library/Python/2.7/site-packages/mkdocs/</div></pre></td></tr></table></figure><p>注意系统的python版本，我这使用的是2.7</p><h4 id="2-用代码编辑器打开search-py文件，搜索generate-search-index，修改后的如下："><a href="#2-用代码编辑器打开search-py文件，搜索generate-search-index，修改后的如下：" class="headerlink" title="2. 用代码编辑器打开search.py文件，搜索generate_search_index，修改后的如下："></a>2. 用代码编辑器打开<code>search.py</code>文件，搜索<code>generate_search_index</code>，修改后的如下：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">return json.dumps(page_dicts, sort_keys=True, ensure_ascii=False, indent=4)</div></pre></td></tr></table></figure><p>添加了<code>ensure_ascii=False,</code></p><h4 id="3-保存文件，如果权限问题无法保存，就另存到其他目录下，再拷贝覆盖mkdocs目录下的search-py文件；"><a href="#3-保存文件，如果权限问题无法保存，就另存到其他目录下，再拷贝覆盖mkdocs目录下的search-py文件；" class="headerlink" title="3. 保存文件，如果权限问题无法保存，就另存到其他目录下，再拷贝覆盖mkdocs目录下的search.py文件；"></a>3. 保存文件，如果权限问题无法保存，就另存到其他目录下，再拷贝覆盖<code>mkdocs</code>目录下的<code>search.py</code>文件；</h4><h4 id="4-打开github站点-https-github-com-codepiano-lunr-js-下载或克隆该修改版的lunr-js项目到本地；"><a href="#4-打开github站点-https-github-com-codepiano-lunr-js-下载或克隆该修改版的lunr-js项目到本地；" class="headerlink" title="4. 打开github站点 https://github.com/codepiano/lunr.js 下载或克隆该修改版的lunr.js项目到本地；"></a>4. 打开github站点 <a href="https://github.com/codepiano/lunr.js" target="_blank" rel="external">https://github.com/codepiano/lunr.js</a> 下载或克隆该修改版的lunr.js项目到本地；</h4><h4 id="5-将下载或克隆到本地的lunr-js项目里的lunr-min-js文件，拷贝覆盖到以下目录里的同名文件："><a href="#5-将下载或克隆到本地的lunr-js项目里的lunr-min-js文件，拷贝覆盖到以下目录里的同名文件：" class="headerlink" title="5. 将下载或克隆到本地的lunr.js项目里的lunr.min.js文件，拷贝覆盖到以下目录里的同名文件："></a>5. 将下载或克隆到本地的lunr.js项目里的<code>lunr.min.js</code>文件，拷贝覆盖到以下目录里的同名文件：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/Library/Python/2.7/site-packages/mkdocs/assets/search/mkdocs/js</div></pre></td></tr></table></figure><p>此目录仍然为mkdocs工具的目录，覆盖官方工具里的同名文件，以后每次生成站点就直接好用了，也可以先备份官方使用的<code>lunr.min.js</code>文件再覆盖它</p><h4 id="6-进入文档的目录，使用mkdocs-build重新生成站点；"><a href="#6-进入文档的目录，使用mkdocs-build重新生成站点；" class="headerlink" title="6. 进入文档的目录，使用mkdocs build重新生成站点；"></a>6. 进入文档的目录，使用<code>mkdocs build</code>重新生成站点；</h4><h4 id="7-查看生成好的文档目录下mkdocs-search-index-json文件，确认里面的中文可以正常显示，非ascii码字符，说明修改官方文件成功；"><a href="#7-查看生成好的文档目录下mkdocs-search-index-json文件，确认里面的中文可以正常显示，非ascii码字符，说明修改官方文件成功；" class="headerlink" title="7. 查看生成好的文档目录下mkdocs/search_index.json文件，确认里面的中文可以正常显示，非ascii码字符，说明修改官方文件成功；"></a>7. 查看生成好的文档目录下<code>mkdocs/search_index.json</code>文件，确认里面的中文可以正常显示，非ascii码字符，说明修改官方文件成功；</h4><h4 id="8-将生成好的文档站点上传更新后，清除浏览器缓存，输入中文进行搜索，出来结果即表示成功"><a href="#8-将生成好的文档站点上传更新后，清除浏览器缓存，输入中文进行搜索，出来结果即表示成功" class="headerlink" title="8. 将生成好的文档站点上传更新后，清除浏览器缓存，输入中文进行搜索，出来结果即表示成功"></a>8. 将生成好的文档站点上传更新后，清除浏览器缓存，输入中文进行搜索，出来结果即表示成功</h4><p>感谢 <a href="http://wyqbailey.github.io/2015/08/13/make-mkdocs-support-chinese.html" target="_blank" rel="external">让mkdocs支持中文搜索</a> 这篇博文的指点，该博文中提供的修改版lunr.js已经不支持中文，使用上面本文提供的支持中文。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mkdocs是一款根据markdown文件生成文档站点的工具，用来生成项目的文档说明非常专业和方便，官网地址是：&lt;a href=&quot;http://www.mkdocs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.mkdocs.org/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装及使用mkdocs&quot;&gt;&lt;a href=&quot;#安装及使用mkdocs&quot; class=&quot;headerlink&quot; title=&quot;安装及使用mkdocs&quot;&gt;&lt;/a&gt;安装及使用&lt;code&gt;mkdocs&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;使用mkdocs需要安装python和pip，由于mac os自带了&lt;code&gt;python&lt;/code&gt;，因此直接从安装pip开始。&lt;/p&gt;
&lt;h4 id=&quot;1-安装pip的简单方法：&quot;&gt;&lt;a href=&quot;#1-安装pip的简单方法：&quot; class=&quot;headerlink&quot; title=&quot;1. 安装pip的简单方法：&quot;&gt;&lt;/a&gt;1. 安装&lt;code&gt;pip&lt;/code&gt;的简单方法：&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo easy_install pip&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="mkdocs" scheme="http://hanhan.pro/tags/mkdocs/"/>
    
      <category term="markdown" scheme="http://hanhan.pro/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>nginx服务器下解决字体跨域的问题</title>
    <link href="http://hanhan.pro/2016/12/25/nginx-icon-font-access/"/>
    <id>http://hanhan.pro/2016/12/25/nginx-icon-font-access/</id>
    <published>2016-12-24T16:00:00.000Z</published>
    <updated>2018-02-10T02:50:32.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-进入-usr-local-nginx-conf-目录，打开-nginx-conf-文件，"><a href="#1-进入-usr-local-nginx-conf-目录，打开-nginx-conf-文件，" class="headerlink" title="1. 进入 /usr/local/nginx/conf 目录，打开 nginx.conf 文件，"></a>1. 进入 <code>/usr/local/nginx/conf</code> 目录，打开 <code>nginx.conf</code> 文件，</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/local/nginx/conf</div></pre></td></tr></table></figure><h4 id="2-找到当前使用的server及要修改的域名处，增加以下代码并保存："><a href="#2-找到当前使用的server及要修改的域名处，增加以下代码并保存：" class="headerlink" title="2. 找到当前使用的server及要修改的域名处，增加以下代码并保存："></a>2. 找到当前使用的server及要修改的域名处，增加以下代码并保存：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">location ~* \.(ttf|otf|eot|woff|woff2)$ &#123;</div><div class="line">    add_header Access-Control-Allow-Origin *;</div><div class="line">&#125;</div></pre></td></tr></table></figure><a id="more"></a><h4 id="3-在-nginx-conf-文件的同级目录，打开-mime-types-文件并找到以下代码："><a href="#3-在-nginx-conf-文件的同级目录，打开-mime-types-文件并找到以下代码：" class="headerlink" title="3. 在 nginx.conf 文件的同级目录，打开 mime.types 文件并找到以下代码："></a>3. 在 <code>nginx.conf</code> 文件的同级目录，打开 <code>mime.types</code> 文件并找到以下代码：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">application/font-woff                 woff;</div></pre></td></tr></table></figure><h4 id="4-在其上方增加以下代码并保存："><a href="#4-在其上方增加以下代码并保存：" class="headerlink" title="4. 在其上方增加以下代码并保存："></a>4. 在其上方增加以下代码并保存：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">font/ttf                              ttf;</div><div class="line">font/otf                              otf;</div><div class="line">application/font-woff2                woff2;</div></pre></td></tr></table></figure><h4 id="5-重启nginx服务器："><a href="#5-重启nginx服务器：" class="headerlink" title="5. 重启nginx服务器："></a>5. 重启nginx服务器：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/local/nginx/sbin/nginx -s reload</div></pre></td></tr></table></figure><h4 id="6-清除浏览器缓存并查看效果，完成。"><a href="#6-清除浏览器缓存并查看效果，完成。" class="headerlink" title="6. 清除浏览器缓存并查看效果，完成。"></a>6. 清除浏览器缓存并查看效果，完成。</h4>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-进入-usr-local-nginx-conf-目录，打开-nginx-conf-文件，&quot;&gt;&lt;a href=&quot;#1-进入-usr-local-nginx-conf-目录，打开-nginx-conf-文件，&quot; class=&quot;headerlink&quot; title=&quot;1. 进入 /usr/local/nginx/conf 目录，打开 nginx.conf 文件，&quot;&gt;&lt;/a&gt;1. 进入 &lt;code&gt;/usr/local/nginx/conf&lt;/code&gt; 目录，打开 &lt;code&gt;nginx.conf&lt;/code&gt; 文件，&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/usr/local/nginx/conf&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;2-找到当前使用的server及要修改的域名处，增加以下代码并保存：&quot;&gt;&lt;a href=&quot;#2-找到当前使用的server及要修改的域名处，增加以下代码并保存：&quot; class=&quot;headerlink&quot; title=&quot;2. 找到当前使用的server及要修改的域名处，增加以下代码并保存：&quot;&gt;&lt;/a&gt;2. 找到当前使用的server及要修改的域名处，增加以下代码并保存：&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;location ~* \.(ttf|otf|eot|woff|woff2)$ &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    add_header Access-Control-Allow-Origin *;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="nginx" scheme="http://hanhan.pro/tags/nginx/"/>
    
      <category term="跨域" scheme="http://hanhan.pro/tags/%E8%B7%A8%E5%9F%9F/"/>
    
  </entry>
  
</feed>
